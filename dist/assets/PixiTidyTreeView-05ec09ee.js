import{_ as y,u as v,P as w,G as u,l as S,T as g,r as P,o as p,c as x,a as k,p as I,d as T,b as c,e as b,f,g as A,F as C}from"./main-f8eb89f2.js";import{u as $}from"./SkillTreeStore-b0a33108.js";import{S as B}from"./SkillPanel-84c7a25e.js";import"./transform-9f729428.js";import{h as M}from"./pixi_viewport-d13c256b.js";import{h as N}from"./index-0536990b.js";import{t as D}from"./tree-6e85cfa8.js";import{a as E}from"./link-afe1ff0a.js";const L={setup(){const e=v(),s=$();return{userDetailsStore:e,skillTreeStore:s}},data(){return{width:800,height:600,skill:{id:null,children:[],isMastered:null,isUnlocked:null,container:null,name:null,description:null,tagIDs:[],sprite:null},tree:{},root:{},context:{},hiddenCanvasContext:{},panX:5,panY:0,scale:.5,translatePos:{x:50,y:50},scaleMultiplier:.8,startDragOffset:{x:0,y:0},mouseDown:!1,r:1.5,nodes:[],nextCol:1,colToNode:{},isSkillInfoPanelShown:!1,firstRender:!0}},components:{SkillPanel:B},async mounted(){this.skillTreeStore.userSkills.length==0&&await this.skillTreeStore.getUserSkills(),this.skill={name:"SKILLS",sprite:null,children:this.skillTreeStore.userSkills};const e=new M({screenWidth:this.width,screenHeight:this.height,worldWidth:this.width,worldHeight:this.height,events:this.$pixiApp.renderer.events});this.$pixiApp.stage.addChild(e),e.center=new w(100,0),e.setZoom(.1),e.drag({wheelScroll:2,factor:2}).pinch({percent:2,factor:2}).wheel().decelerate().clampZoom({minScale:.001,maxScale:10}),document.querySelector("#skilltree").appendChild(this.$pixiApp.view),this.getAlgorithm()},methods:{getAlgorithm(){var e=[];e=JSON.parse(JSON.stringify(this.skill.children));function s(t){for(var i=t.length;i--;){if(t[i].type=="super"&&t[i].position!="end"){var r=[],d=[];for(let a=0;a<t[i].children.length;a++)t[i].children[a].type=="sub"?r.push(t[i].children[a]):d.push(t[i].children[a]);var m={skill_name:t[i].skill_name,type:"super",position:"end",children:r};t[i].children=[],t[i].children.push(m);for(let a=0;a<d.length;a++)t[i].children.push(d[a])}typeof t[i]<"u"&&t[i].children&&Array.isArray(t[i].children)&&t[i].children.length>0&&s(t[i].children)}}s(e);var n={skill_name:"My skills",children:e};const o=8e3;this.root=N(n);const l=24,h=o/(this.root.height+1);this.tree=D().nodeSize([l,h]),this.tree(this.root),this.drawTree()},drawTree(){var e=this.root.descendants();const s=this.root.links();for(const n of s)this.drawLink(n);for(const n of e)this.drawNode(n)},drawNode(e){const s=new u;s.lineStyle(0),s.beginFill(0,1),s.drawCircle(e.y,e.x,10),s.endFill(),this.$pixiApp.stage.children[0].addChild(s),s.eventMode="static",s.cursor="pointer",s.on("pointerdown",l=>{var h={isMastered:e.data.is_mastered,isUnlocked:e.data.is_accessible,name:e.data.skill_name};this.skill=h,this.isSkillInfoPanelShown||this.showInfoPanel()});const n=new S({fontFamily:"Arial",fontSize:12,fill:"#000",stroke:"#fff",strokeThickness:3}),o=new g(e.data.skill_name,n);o.anchor.set(0,.5),o.x=e.y+10,o.y=e.x,this.$pixiApp.stage.children[0].addChild(o)},drawLink(e){var n=E().x(d=>d.y).y(d=>d.x)(e),o=n.substring(n.indexOf("M")+1,n.lastIndexOf("C"));const l=o.split(",");var h=n.split("C")[1],t=h.split(",");const i=new u;var r;e.target.data.is_mastered==1?r=4:r=2,(e.source.data.type=="super"&&e.target.data.position=="end"||e.target.data.type=="sub")&&(r=1),i.lineStyle(r,0,1),i.position.x=l[0],i.position.y=l[1],i.bezierCurveTo(t[0]-l[0],t[1]-l[1],t[2]-l[0],t[3]-l[1],t[4]-l[0],t[5]-l[1]),this.$pixiApp.stage.children[0].addChild(i)},showInfoPanel(){this.isSkillInfoPanelShown||(this.isSkillInfoPanelShown=!0,screen.width>800?document.getElementById("skillInfoPanel").style.width="474px":document.getElementById("skillInfoPanel").style.height="474px")},hideInfoPanel(){this.isSkillInfoPanelShown&&(screen.width>800?document.getElementById("skillInfoPanel").style.width="0px":document.getElementById("skillInfoPanel").style.height="0px",document.getElementById("sidepanel-backdrop").style.display="none",this.isSkillInfoPanelShown=!1)},zoomed(e){this.context.save(),this.context.clearRect(0,0,this.context.canvas.width,this.context.canvas.height),this.context.translate(e.x,e.y),this.context.scale(e.k,e.k),this.drawTree(!1),this.context.fill(),this.context.restore(),this.hiddenCanvasContext.save(),this.hiddenCanvasContext.clearRect(0,0,this.hiddenCanvasContext.canvas.width,this.hiddenCanvasContext.canvas.height),this.hiddenCanvasContext.translate(e.x,e.y),this.hiddenCanvasContext.scale(e.k,e.k),this.drawTree(!0),this.hiddenCanvasContext.fill(),this.hiddenCanvasContext.restore()}}},_=e=>(I("data-v-b7889cfa"),e=e(),T(),e),z={id:"wrapper"},F=_(()=>c("div",{id:"skilltree"},null,-1)),G=_(()=>c("div",{id:"sidepanel-backdrop"},null,-1));function O(e,s,n,o,l,h){const t=P("SkillPanel");return p(),x("div",z,[k(t,{skill:l.skill},null,8,["skill"]),F,G])}const U=y(L,[["render",O],["__scopeId","data-v-b7889cfa"]]);const V=c("div",{id:"purple-banner"},null,-1),W=c("span",null,"Loading...",-1),Y={__name:"PixiTidyTreeView",setup(e){return(s,n)=>(p(),x(C,null,[V,(p(),b(A,null,{default:f(()=>[k(U)]),fallback:f(()=>[W]),_:1}))],64))}};export{Y as default};
