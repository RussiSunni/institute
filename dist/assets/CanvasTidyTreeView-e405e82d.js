import{_ as g,u as y,o as x,c as m,b as r,F as _,p as w,d as k,e as S,f,g as T,a as P}from"./main-906ef780.js";import{u as D}from"./SkillTreeStore-b83e8b95.js";import{h as b}from"./transform-9136d5be.js";import{a as I}from"./ascending-3ff63084.js";import{t as L}from"./tree-6111a21a.js";import{a as X}from"./link-afe1ff0a.js";const Y={setup(){const t=y(),s=D();return{userDetailsStore:t,skillTreeStore:s}},data(){return{width:6e3,height:null,skill:{id:null,children:[],isMastered:null,isUnlocked:null,container:null,name:null,description:null,tagIDs:[],sprite:null},tree:{},root:{},context:{},panX:5,panY:0,scale:.5,translatePos:{x:50,y:50},scaleMultiplier:.8,startDragOffset:{x:0,y:0},mouseDown:!1}},async mounted(){this.skillTreeStore.userSkills.length==0&&await this.skillTreeStore.getUserSkills(),this.height=window.innerHeight;let t=document.getElementById("canvas");this.context=t.getContext("2d"),this.skill={name:"SKILLS",sprite:null,children:this.skillTreeStore.userSkills},this.getAlgorithm(),t.addEventListener("mousedown",s=>{this.mouseDown=!0,this.startDragOffset.x=s.clientX-this.translatePos.x,this.startDragOffset.y=s.clientY-this.translatePos.y}),t.addEventListener("mouseup",s=>{this.mouseDown=!1}),t.addEventListener("mouseover",s=>{this.mouseDown=!1}),t.addEventListener("mouseout",s=>{this.mouseDown=!1}),t.addEventListener("mousemove",s=>{this.mouseDown&&(this.translatePos.x=s.clientX-this.startDragOffset.x,this.translatePos.y=s.clientY-this.startDragOffset.y,this.drawTree(this.scale,this.translatePos))})},methods:{getAlgorithm(){var t=[];t=JSON.parse(JSON.stringify(this.skill.children));function s(e){for(var i=e.length;i--;){if(e[i].type=="super"&&e[i].position!="end"){var p=[],u=[];for(let a=0;a<e[i].children.length;a++)e[i].children[a].type=="sub"?p.push(e[i].children[a]):u.push(e[i].children[a]);var v={skill_name:e[i].skill_name,type:"super",position:"end",children:p};e[i].children=[],e[i].children.push(v);for(let a=0;a<u.length;a++)e[i].children.push(u[a])}typeof e[i]<"u"&&e[i].children&&Array.isArray(e[i].children)&&e[i].children.length>0&&s(e[i].children)}}s(t);var n={skill_name:"My skills",children:t};this.root=b(n);const c=12,h=this.width/(this.root.height+1);this.tree=L().nodeSize([c,h]),this.root.sort((e,i)=>I(e.data.name,i.data.name)),this.tree(this.root);let o=1/0,l=-o;this.root.each(e=>{e.x>l&&(l=e.x),e.x<o&&(o=e.x)});var d=document.getElementById("canvas");d.width=this.width,d.height=this.height,this.context=d.getContext("2d"),this.drawTree(this.scale,this.translatePos)},drawTree(t,s){this.context.clearRect(0,0,this.context.canvas.width,this.context.canvas.height),this.context.save(),this.context.translate(this.translatePos.x,this.translatePos.y),this.context.scale(t,t);const n=this.root.links(),c=this.root.descendants();this.context.beginPath();for(const h of n)this.drawLink(h);this.context.beginPath();for(const h of c)this.drawNode(h);this.context.restore()},drawNode(t){this.context.beginPath(),this.context.moveTo(t.y,t.x+500),this.context.arc(t.y,t.x+500,4,0,2*Math.PI),this.context.fillStyle="#000",this.context.fill(),this.context.beginPath(),this.context.strokeStyle="#FFF",this.context.lineWidth=4,this.context.strokeText(t.data.skill_name,t.y+10,t.x+502),this.context.fillStyle="#000",this.context.fillText(t.data.skill_name,t.y+10,t.x+502)},drawLink(t){const s=X().x(n=>n.y).y(n=>n.x+500).context(this.context);this.context.lineWidth=1,this.context.beginPath(),s(t),this.context.strokeStyle="#000",this.context.stroke()},panRight(){this.panX=0,this.panY=0,this.panX=this.panX+50/this.scale,this.redraw()},panLeft(){this.panX=0,this.panY=0,this.panX=this.panX-50/this.scale,this.redraw()},panUp(){this.panX=0,this.panY=0,this.panY=this.panY+50/this.scale,this.redraw()},panDown(){this.panX=0,this.panY=0,this.panY=this.panY-50/this.scale,this.redraw()},redraw(){this.context.save(),this.context.setTransform(1,0,0,1,0,0),this.context.clearRect(0,0,this.context.canvas.width,this.context.canvas.height),this.context.beginPath(),this.context.restore(),this.drawTree()},zoomOut(){this.scale/=this.scaleMultiplier,this.drawTree(this.scale,this.translatePos)},zoomIn(){this.scale*=this.scaleMultiplier,this.drawTree(this.scale,this.translatePos)}}},O=t=>(w("data-v-35f9e638"),t=t(),k(),t),z={id:"buttonWrapper"},E=O(()=>r("canvas",{id:"canvas",width:"1500",height:"1500"},null,-1));function M(t,s,n,c,h,o){return x(),m(_,null,[r("div",z,[r("input",{type:"button",onClick:s[0]||(s[0]=(...l)=>o.zoomOut&&o.zoomOut(...l)),value:"+"}),r("input",{type:"button",onClick:s[1]||(s[1]=(...l)=>o.zoomIn&&o.zoomIn(...l)),value:"-"})]),E],64)}const B=g(Y,[["render",M],["__scopeId","data-v-35f9e638"]]);const N=r("div",{id:"purple-banner"},null,-1),F=r("span",null,"Loading...",-1),j={__name:"CanvasTidyTreeView",setup(t){return(s,n)=>(x(),m(_,null,[N,(x(),S(T,null,{default:f(()=>[P(B)]),fallback:f(()=>[F]),_:1}))],64))}};export{j as default};
