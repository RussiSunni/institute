import{h as n,_ as h,o as i,c as a,F as p,i as _,b as s,w as u,j as f,t as k,k as m,p as g,d as v}from"./main-cb49adad.js";const A=n("skillTags",{state:()=>({skillTagsList:[]}),actions:{async getSkillTagsList(){const t=await(await fetch("/skill-tags/list")).json();this.skillTagsList=t}}});const S={setup(){},data(){return{levels:[{id:"grade_school",name:"Grade school"},{id:"middle_school",name:"Middle school"},{id:"high_school",name:"High school"},{id:"college",name:"College"},{id:"phd",name:"PhD"}],checkedFilters:[],isFilterApplied:!1}},async created(){},async mounted(){},methods:{applyFilter:function(e){this.isFilterApplied=!0,this.$parent.filterSkills(e)}}},d=e=>(g("data-v-b4ceaabf"),e=e(),v(),e),F={id:"filters"},b=d(()=>s("h1",{id:"filterMainHeader",class:"mb-2"},"My Skill Tree",-1)),y={key:0},T=d(()=>s("p",{class:"mb-2"},"Choose which level to filter out",-1)),C={class:"form-check"},w=["value","onChange"],x={class:"form-check-label",for:"flexCheckDefault"};function D(e,t,I,L,l,r){return i(),a("div",F,[b,l.isFilterApplied==!1?(i(),a("div",y,[T,(i(!0),a(p,null,_(l.levels,o=>(i(),a("div",null,[s("div",C,[u(s("input",{class:"form-check-input",type:"radio",value:o.id,id:"flexCheckDefault","onUpdate:modelValue":t[0]||(t[0]=c=>l.checkedFilters=c),onChange:c=>r.applyFilter(o.id)},null,40,w),[[f,l.checkedFilters]]),s("label",x,k(o.name),1)])]))),256))])):m("",!0)])}const B=h(S,[["render",D],["__scopeId","data-v-b4ceaabf"]]);export{B as S,A as u};
