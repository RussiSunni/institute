import{_ as k,u as v,S as y,r as x,o as g,c as m,b as p,a as S,p as w,d as T,e as b,f as _,g as R,F as I}from"./main-9e950be5.js";import{u as M}from"./SkillTreeStore-2701a7f7.js";import{u as z,S as P,h as L}from"./transform-a6d6848e.js";import{S as N}from"./fontfaceobserver.standalone-2885f38f.js";import{c as $,l as A,z as j,s as B}from"./zoom-d657277b.js";function U(t,r){return t.parent===r.parent?1:2}function O(t){return t.reduce(F,0)/t.length}function F(t,r){return t+r.x}function q(t){return 1+t.reduce(D,0)}function D(t,r){return Math.max(t,r.y)}function E(t){for(var r;r=t.children;)t=r[0];return t}function V(t){for(var r;r=t.children;)t=r[r.length-1];return t}function X(){var t=U,r=1,n=1,u=!1;function l(a){var d,o=0;a.eachAfter(function(i){var f=i.children;f?(i.x=O(f),i.y=q(f)):(i.x=d?o+=t(i,d):0,i.y=0,d=i)});var s=E(a),h=V(a),e=s.x-t(s,h)/2,c=h.x+t(h,s)/2;return a.eachAfter(u?function(i){i.x=(i.x-a.x)*r,i.y=(a.y-i.y)*n}:function(i){i.x=(i.x-e)/(c-e)*r,i.y=(1-(a.y?i.y/a.y:1))*n})}return l.separation=function(a){return arguments.length?(t=a,l):t},l.size=function(a){return arguments.length?(u=!1,r=+a[0],n=+a[1],l):u?null:[r,n]},l.nodeSize=function(a){return arguments.length?(u=!0,r=+a[0],n=+a[1],l):u?[r,n]:null},l}const C={setup(){const t=v(),r=M(),n=z();return{userDetailsStore:t,skillTreeStore:r,skillTagsStore:n}},data(){return{stageContents:[],isSkillInfoPanelShown:!1,width:null,height:null,radiusMultiplier:1,firstLevelNodeSize:100,regularNodeSize:50,subSkillRadius:50,skill:{id:null,children:[],isMastered:null,isUnlocked:null,container:null,name:null,description:null,tagIDs:[],sprite:null},isRecentered:!1}},components:{SkillTreeFilter:P,SkillPanel:N},async mounted(){this.skillTreeStore.userSkills.length==0&&await this.skillTreeStore.getUserSkills(),this.width=2e4,this.height=2e4,this.radius=Math.min(this.width,this.height)/2;const t=y.from("center-node.png");this.skill={name:"SKILLS",sprite:t,children:this.skillTreeStore.userSkills},this.getAlgorithm()},methods:{getAlgorithm(){var t=[];t=JSON.parse(JSON.stringify(this.skill.children));function r(e){for(var c=e.length;c--;)e[c].type=="sub"&&e.splice(c,1),typeof e[c]<"u"&&e[c].children&&Array.isArray(e[c].children)&&e[c].children.length>0&&r(e[c].children)}r(t);var n={name:null,children:t};const l=X().size([2*Math.PI,this.radius*this.radiusMultiplier]).separation((e,c)=>(e.parent==c.parent,1/e.depth))(L(n)),a=this.width*.5,d=this.height*.52,o=$("svg").attr("id","radialTree").attr("width",this.width).attr("height",this.height).attr("viewBox",[-a,-d,this.width,this.height]).attr("style","width: 100%; height: auto; font: 10px sans-serif;"),s=o.append("g");s.append("g").attr("fill","none").attr("stroke","#000").attr("stroke-opacity",1).selectAll().data(l.links()).join("path").attr("d",A().angle(e=>e.x).radius(e=>e.y)).attr("stroke-width",function(e){return e.target.data.is_mastered==1?8:2}),s.append("g").selectAll().data(l.descendants()).join("circle").attr("transform",e=>`rotate(${e.x*180/Math.PI-90}) translate(${e.y},0)`).attr("fill",function(e){if(e.depth==0)return"lightgreen";if(e.data.type=="domain")return"orange";if(e.data.level=="grade_school")return"yellow";if(e.data.level=="middle_school")return"lightblue";if(e.data.level=="high_school")return"green";if(e.data.level=="college")return"red";if(e.data.level=="phd")return"purple"}).attr("r",function(e){return e.depth==0?50:e.data.type=="domain"?20:5}),s.append("g").attr("stroke-linejoin","round").attr("stroke-width",3).selectAll().data(l.descendants()).join("text").attr("transform",e=>`rotate(${e.x*180/Math.PI-90}) translate(${e.y},0) rotate(${e.x>=Math.PI?180:0})`).attr("dy","0.31em").attr("x",e=>e.x<Math.PI==!e.children?6:-6).attr("text-anchor",e=>e.x<Math.PI==!e.children?"start":"end").attr("paint-order","stroke").attr("stroke","white").attr("fill","currentColor").text(e=>e.data.skill_name),o.call(j().extent([[0,0],[this.width,this.height]]).scaleExtent([1e-4,20]).on("zoom",h));function h({transform:e}){s.attr("transform",e)}document.querySelector("#skilltree").append(o.node())},printPDF(){var t=document.getElementById("radialTree"),r=B(t),n=r.node(),u=new XMLSerializer,l=u.serializeToString(n),a={svg:l,treeType:"radial"},d=JSON.stringify(a),o=new XMLHttpRequest;o.responseType="arraybuffer",o.open("POST","/skilltree/print-pdf",!0),o.setRequestHeader("Content-type","application/json;charset=UTF-8"),o.setRequestHeader("Accept","application/json, text/plain, */*"),o.send(d),o.onload=function(){if(this.readyState==4&&this.status==200){let h=new Blob([o.response],{type:"application/pdf"});const e=window.URL.createObjectURL(h);var s=document.createElement("a");document.body.appendChild(s),s.style="display: none",s.href=e,s.download="My-Skill-Tree.pdf",s.click(),window.URL.revokeObjectURL(e)}}}}},H=t=>(w("data-v-eb08dfa0"),t=t(),T(),t),J={class:"flex-container skill-tree-container"},Y={id:"wrapper"},K={id:"skilltree"},G=H(()=>p("div",{id:"sidepanel-backdrop"},null,-1));function Q(t,r,n,u,l,a){const d=x("SkillPanel");return g(),m("div",J,[p("div",Y,[p("div",K,[S(d,{skill:l.skill},null,8,["skill"])]),G])])}const W=k(C,[["render",Q],["__scopeId","data-v-eb08dfa0"]]);const Z=p("div",{id:"purple-banner"},null,-1),ee=p("span",null,"Loading...",-1),ne={__name:"RadialClusterTreeView",setup(t){return(r,n)=>(g(),m(I,null,[Z,(g(),b(R,null,{default:_(()=>[S(W)]),fallback:_(()=>[ee]),_:1}))],64))}};export{ne as default};
